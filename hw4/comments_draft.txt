########################################################################################################################
 Program: comb                                 Programmer: Kyung Ho Min
 Due Date: Nov 8, 2022                         Course: CS2640
#######################################################################################################################
 Overall Program Functional Description:
   This program asks the user to put in values of n and r where n >= 0, r >=0, and n >= r.
   (n and r are both integers.)
   Then, the program will recursively calculate the value of comb(n, r) and will print the
   output of this to the user.
########################################################################################################################
 Register usage in Main:
   $a0, $a2, $v0 - used to pass values into subroutines
   $t0, $t1 - used to store values for n and r before calling subroutine
########################################################################################################################
 Pseudocode Description:
     1. Print prompt and get the value of n from the user (n >= 0)
     2. Print prompt and get the value of r from the user (r >= 0 && n >= r)
     3. Call subroutine combRec
     4. Print output to user
########################################################################################################################

########################################################################################################################
 Function Name: combRec(int n, int r)
########################################################################################################################
 Functional Description:
   Recursively caluclates the number of combinations of n items choosing r items.
   The recursive formula used is Comb(n, r) = Comb(n-1, r) + Comb(n-1, r-1).
########################################################################################################################
 Register Usage in the Function:
     $v0 - used for syscalls and return values
     $a0, $a1 - input values for the function, used for recursive calls too
     $sp - stack pointer, we will store 4 words on the stack.
     $ra - return address, must be recorded on the stack if there is further recursion. 
########################################################################################################################
 Algoritmic Description in Pseudocode:
     1. if (n == r || r == 0), return 1.
     2. else, make space on the stack for 4 words
     3. store $ra, n, and r on the stack. 
     4. make recursive call of combRec(n-1, r), and then store its return value to the stack.
     5. set up call for comb(n-1, r-1) by retrieving n and r from the stack, then call combRec.
     6. get teh value of combRec(n-1, r) and add it to $v0, which has combRec(n-1, r-1)
     7. return the value in v0, which is comb(n, r)
########################################################################################################################